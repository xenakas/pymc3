{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Using a \"black box\" likelihood function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Running on PyMC3 v3.5\n",
      "Python version:     3.6.6\n",
      "IPython version:    6.5.0\n",
      "Cython version:     0.28.5\n",
      "GSL version:        2.1\n",
      "Numpy version:      1.15.1\n",
      "Theano version:     1.0.2\n",
      "Matplotlib version: 2.2.3\n",
      "emcee version:      2.2.1\n",
      "corner version:     2.0.1\n"
     ]
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "%load_ext Cython\n",
    "\n",
    "%matplotlib inline\n",
    "\n",
    "import pymc3 as pm\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.style.use('seaborn-darkgrid')\n",
    "print('Running on PyMC3 v{}'.format(pm.__version__))\n",
    "\n",
    "# for reproducibility here's some version info for modules used in this notebook\n",
    "import theano\n",
    "import theano.tensor as tt\n",
    "import platform\n",
    "import cython\n",
    "import IPython\n",
    "import matplotlib\n",
    "import emcee\n",
    "import corner\n",
    "import os\n",
    "print(\"Python version:     {}\".format(platform.python_version()))\n",
    "print(\"IPython version:    {}\".format(IPython.__version__))\n",
    "print(\"Cython version:     {}\".format(cython.__version__))\n",
    "print(\"GSL version:        {}\".format(os.popen('gsl-config --version').read().strip()))\n",
    "print(\"Numpy version:      {}\".format(np.__version__))\n",
    "print(\"Theano version:     {}\".format(theano.__version__))\n",
    "print(\"Matplotlib version: {}\".format(matplotlib.__version__))\n",
    "print(\"emcee version:      {}\".format(emcee.__version__))\n",
    "print(\"corner version:     {}\".format(corner.__version__))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[PyMC3](https://docs.pymc.io/index.html) is a great tool for doing Bayesian inference and parameter estimation. It has a load of [in-built probability distributions](https://docs.pymc.io/api/distributions.html) that you can use to set up priors and likelihood functions for your particular model. You can even create your own [custom distributions](https://docs.pymc.io/prob_dists.html#custom-distributions).\n",
    "\n",
    "However, this is not necessarily that simple if you have a model function, or probability distribution, that, for example, relies on an external code that you have little/no control over (and may even be, for example, wrapped `C` code rather than Python). This can be problematic went you need to pass parameters set as PyMC3 distributions to these external functions; your external function probably wants you to pass it floating point numbers rather than PyMC3 distributions!\n",
    "\n",
    "```python\n",
    "import pymc3 as pm:\n",
    "from external_module import my_external_func  # your external function!\n",
    "\n",
    "# set up your model\n",
    "with pm.Model():\n",
    "    # your external function takes two parameters, a and b, with Uniform priors\n",
    "    a = pm.Uniform('a', lower=0., upper=1.)\n",
    "    b = pm.Uniform('b', lower=0., upper=1.)\n",
    "    \n",
    "    m = my_external_func(a, b)  # <--- this is not going to work!\n",
    "```\n",
    "\n",
    "Another issue is that if you want to be able to use the [gradient-based step samplers](https://docs.pymc.io/notebooks/getting_started.html#Gradient-based-sampling-methods) like [NUTS](https://docs.pymc.io/api/inference.html#module-pymc3.step_methods.hmc.nuts) and [Hamiltonian Monte Carlo (HMC)](https://docs.pymc.io/api/inference.html#hamiltonian-monte-carlo), then your model/likelihood needs a gradient to be defined. If you have a model that is defined as a set of Theano operators then this is no problem - internally it will be able to do automatic differentiation - but if your model is essentially a \"black box\" then you won't necessarily know what the gradients are.\n",
    "\n",
    "Defining a model/likelihood that PyMC3 can use and that calls your \"black box\" function is possible, but it relies on creating a [custom Theano Op](https://docs.pymc.io/advanced_theano.html#writing-custom-theano-ops). This is, hopefully, a clear description of how to do this, including one way of writing a gradient function that could be generally applicable.\n",
    "\n",
    "In the examples below, we create a very simple model and log-likelihood function in [Cython](http://cython.org/). Cython is used just as an example to show what you might need to do if calling external `C` codes, but you could in fact be using pure Python codes. The log-likelihood function used is actually just a [Normal distribution](https://en.wikipedia.org/wiki/Normal_distribution), so defining this yourself is obviously overkill (and I'll compare it to doing the same thing purely with the pre-defined PyMC3 [Normal](https://docs.pymc.io/api/distributions/continuous.html#pymc3.distributions.continuous.Normal) distribution), but it should provide a simple to follow demonstration.\n",
    "\n",
    "First, let's define a _super-complicated_&trade; model (a straight line!), which is parameterised by two variables (a gradient `m` and a y-intercept `c`) and calculated at a vector of points `x`. Here the model is defined in [Cython](http://cython.org/) and calls [GSL](https://www.gnu.org/software/gsl/) functions. This is just to show that you could be calling some other `C` library that you need. In this example, the model parameters are all packed into a list/array/tuple called `theta`.\n",
    "\n",
    "Let's also define a _really-complicated_&trade; log-likelihood function (a Normal log-likelihood that ignores the normalisation), which takes in the list/array/tuple of model parameter values `theta`, the points at which to calculate the model `x`, the vector of \"observed\" data points `data`, and the standard deviation of the noise in the data `sigma`. This log-likelihood function calls the _super-complicated_&trade; model function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "%%cython -I/usr/include -L/usr/lib/x86_64-linux-gnu -lgsl -lgslcblas -lm\n",
    "\n",
    "import cython\n",
    "cimport cython\n",
    "\n",
    "import numpy as np\n",
    "cimport numpy as np\n",
    "\n",
    "### STUFF FOR USING GSL (FEEL FREE TO IGNORE!) ###\n",
    "\n",
    "# declare GSL vector structure and functions\n",
    "cdef extern from \"gsl/gsl_block.h\":\n",
    "    cdef struct gsl_block:\n",
    "        size_t size\n",
    "        double * data\n",
    "\n",
    "cdef extern from \"gsl/gsl_vector.h\":\n",
    "    cdef struct gsl_vector:\n",
    "        size_t size\n",
    "        size_t stride\n",
    "        double * data\n",
    "        gsl_block * block\n",
    "        int owner\n",
    "\n",
    "    ctypedef struct gsl_vector_view:\n",
    "        gsl_vector vector\n",
    "\n",
    "    int gsl_vector_scale (gsl_vector * a, const double x) nogil\n",
    "    int gsl_vector_add_constant (gsl_vector * a, const double x) nogil\n",
    "    gsl_vector_view gsl_vector_view_array (double * base, size_t n) nogil\n",
    "\n",
    "###################################################\n",
    "\n",
    "\n",
    "# define your super-complicated model that uses loads of external codes\n",
    "cpdef my_model(theta, np.ndarray[np.float64_t, ndim=1] x):\n",
    "    \"\"\"\n",
    "    A straight line!\n",
    "\n",
    "    Note:\n",
    "        This function could simply be:\n",
    "\n",
    "            m, c = thetha\n",
    "            return m*x + x\n",
    "\n",
    "        but I've made it more complicated for demonstration purposes\n",
    "    \"\"\"\n",
    "    m, c = theta  # unpack line gradient and y-intercept\n",
    "\n",
    "    cdef size_t length = len(x)  # length of x\n",
    "\n",
    "    cdef np.ndarray line = np.copy(x)  # make copy of x vector\n",
    "    cdef gsl_vector_view lineview      # create a view of the vector\n",
    "    lineview = gsl_vector_view_array(<double *>line.data, length) \n",
    "\n",
    "    # multiply x by m\n",
    "    gsl_vector_scale(&lineview.vector, <double>m)\n",
    "\n",
    "    # add c\n",
    "    gsl_vector_add_constant(&lineview.vector, <double>c)\n",
    "\n",
    "    # return the numpy array\n",
    "    return line\n",
    "\n",
    "\n",
    "# define your really-complicated likelihood function that uses loads of external codes\n",
    "cpdef my_loglike(theta, np.ndarray[np.float64_t, ndim=1] x,\n",
    "                 np.ndarray[np.float64_t, ndim=1] data, sigma):\n",
    "    \"\"\"\n",
    "    A Gaussian log-likelihood function for a model with parameters given in theta\n",
    "    \"\"\"\n",
    "\n",
    "    model = my_model(theta, x)\n",
    "\n",
    "    return -(0.5/sigma**2)*np.sum((data - model)**2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, as things are, if we wanted to sample from this log-likelihood function, using certain prior distributions for the model parameters (gradient and y-intercept) using PyMC3, we might try something like this (using a [PyMC3 DensityDist](https://docs.pymc.io/prob_dists.html#custom-distributions)):\n",
    "\n",
    "```python\n",
    "import pymc3 as pm\n",
    "\n",
    "# create/read in our \"data\" (I'll show this in the real example below)\n",
    "x = ...\n",
    "sigma = ...\n",
    "data = ...\n",
    "\n",
    "with pm.Model():\n",
    "    # set priors on model gradient and y-intercept\n",
    "    m = pm.Uniform('m', lower=-10., upper=10.)\n",
    "    c = pm.Uniform('c', lower=-10., upper=10.)\n",
    "\n",
    "    # create custom distribution \n",
    "    pm.DensityDist('likelihood', my_loglike,\n",
    "                   observed={'theta': (m, c), 'x': x, 'data': data, 'sigma': sigma})\n",
    "    \n",
    "    # sample from the distribution\n",
    "    trace = pm.sample(1000)\n",
    "```\n",
    "\n",
    "But, this will give an error like:\n",
    "\n",
    "```\n",
    "ValueError: setting an array element with a sequence.\n",
    "```\n",
    "\n",
    "This is because `m` and `c` are Theano tensor-type objects.\n",
    "\n",
    "So, what we actually need to do is create a [Theano Op](http://deeplearning.net/software/theano/extending/extending_theano.html). This will be a new class that wraps our log-likelihood function (or just our model function, if that is all that is required) into something that can take in Theano tensor objects, but internally can cast them as floating point values that can be passed to our log-likelihood function. We will do this below, initially without defining a [grad() method](http://deeplearning.net/software/theano/extending/op.html#grad) for the Op."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# define a theano Op for our likelihood function\n",
    "class LogLike(tt.Op):\n",
    "\n",
    "    \"\"\"\n",
    "    Specify what type of object will be passed and returned to the Op when it is\n",
    "    called. In our case we will be passing it a vector of values (the parameters\n",
    "    that define our model) and returning a single \"scalar\" value (the\n",
    "    log-likelihood)\n",
    "    \"\"\"\n",
    "    itypes = [tt.dvector] # expects a vector of parameter values when called\n",
    "    otypes = [tt.dscalar] # outputs a single scalar value (the log likelihood)\n",
    "\n",
    "    def __init__(self, loglike, data, x, sigma):\n",
    "        \"\"\"\n",
    "        Initialise the Op with various things that our log-likelihood function\n",
    "        requires. Below are the things that are needed in this particular\n",
    "        example.\n",
    "\n",
    "        Parameters\n",
    "        ----------\n",
    "        loglike:\n",
    "            The log-likelihood (or whatever) function we've defined\n",
    "        data:\n",
    "            The \"observed\" data that our log-likelihood function takes in\n",
    "        x:\n",
    "            The dependent variable (aka 'x') that our model requires\n",
    "        sigma:\n",
    "            The noise standard deviation that our function requires.\n",
    "        \"\"\"\n",
    "\n",
    "        # add inputs as class attributes\n",
    "        self.likelihood = loglike\n",
    "        self.data = data\n",
    "        self.x = x\n",
    "        self.sigma = sigma\n",
    "\n",
    "    def perform(self, node, inputs, outputs):\n",
    "        # the method that is used when calling the Op\n",
    "        theta, = inputs  # this will contain my variables\n",
    " \n",
    "        # call the log-likelihood function\n",
    "        logl = self.likelihood(theta, self.x, self.data, self.sigma)\n",
    "\n",
    "        outputs[0][0] = np.array(logl) # output the log-likelihood"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, let's use this Op to repeat the example shown above. To do this let's create some data containing a straight line with additive Gaussian noise (with a mean of zero and a standard deviation of `sigma`). For simplicity we set [uniform](https://docs.pymc.io/api/distributions/continuous.html#pymc3.distributions.continuous.Uniform) prior distributions on the gradient and y-intercept. As we've not set the `grad()` method of the Op PyMC3 will not be able to use the gradient-based samplers, so will fall back to using the [Slice](https://docs.pymc.io/api/inference.html#module-pymc3.step_methods.slicer) sampler."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Auto-assigning NUTS sampler...\n",
      "Initializing NUTS using jitter+adapt_diag...\n",
      "Initializing NUTS failed. Falling back to elementwise auto-assignment.\n",
      "Multiprocess sampling (2 chains in 2 jobs)\n",
      "CompoundStep\n",
      ">Slice: [c]\n",
      ">Slice: [m]\n",
      "Sampling 2 chains: 100%|██████████| 8000/8000 [00:04<00:00, 1928.75draws/s]\n",
      "The number of effective samples is smaller than 25% for some parameters.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# set up our data\n",
    "N = 10  # number of data points\n",
    "sigma = 1.  # standard deviation of noise\n",
    "x = np.linspace(0., 9., N)\n",
    "\n",
    "mtrue = 0.4  # true gradient\n",
    "ctrue = 3.   # true y-intercept\n",
    "\n",
    "truemodel = my_model([mtrue, ctrue], x)\n",
    "\n",
    "# make data\n",
    "np.random.seed(716742)  # set random seed, so the data is reproducible each time\n",
    "data = sigma*np.random.randn(N) + truemodel\n",
    "\n",
    "ndraws = 3000  # number of draws from the distribution\n",
    "nburn = 1000   # number of \"burn-in points\" (which we'll discard)\n",
    "\n",
    "# create our Op\n",
    "logl = LogLike(my_loglike, data, x, sigma)\n",
    "\n",
    "# use PyMC3 to sampler from log-likelihood\n",
    "with pm.Model():\n",
    "    # uniform priors on m and c\n",
    "    m = pm.Uniform('m', lower=-10., upper=10.)\n",
    "    c = pm.Uniform('c', lower=-10., upper=10.)\n",
    "\n",
    "    # convert m and c to a tensor vector\n",
    "    theta = tt.as_tensor_variable([m, c])\n",
    "\n",
    "    # use a DensityDist (use a lamdba function to \"call\" the Op)\n",
    "    pm.DensityDist('likelihood', lambda v: logl(v), observed={'v': theta})\n",
    "    \n",
    "    trace = pm.sample(ndraws, tune=nburn, discard_tuned_samples=True)\n",
    "\n",
    "# plot the traces\n",
    "_ = pm.traceplot(trace, lines={'m': mtrue, 'c': ctrue})\n",
    "\n",
    "# put the chains in an array (for later!)\n",
    "samples_pymc3 = np.vstack((trace['m'], trace['c'])).T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What if we wanted to use NUTS or HMC? If we knew the analytical derivatives of the model/likelihood function then we could add a [grad() method](http://deeplearning.net/software/theano/extending/op.html#grad) to the Op using that analytical form.\n",
    "\n",
    "But, what if we don't know the analytical form. If our model/likelihood is purely Python and made up of standard maths operators and Numpy functions, then the [autograd](https://github.com/HIPS/autograd) module could potentially be used to find gradients (also, see [here](https://github.com/ActiveState/code/blob/master/recipes/Python/580610_Auto_differentiation/recipe-580610.py) for a nice Python example of automatic differentiation). But, if our model/likelihood truely is a \"black box\" then we can just use the good-old-fashioned [finite difference](https://en.wikipedia.org/wiki/Finite_difference) to find the gradients - this can be slow, especially if there are a large number of variables, or the model takes a long time to evaluate. Below, a function to find gradients has been defined that uses the finite difference (the central difference) - it uses an iterative method with successively smaller interval sizes to check that the gradient converges. But, you could do something far simpler and just use, for example, the SciPy [approx_fprime](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.approx_fprime.html) function. Here, the gradient function is defined in Cython for speed, but if the function it evaluates to find the gradients is the performance bottle neck then having this as a pure Python function may not make a significant speed difference."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "%%cython\n",
    "\n",
    "import cython\n",
    "cimport cython\n",
    "\n",
    "import numpy as np\n",
    "cimport numpy as np\n",
    "\n",
    "import warnings\n",
    "\n",
    "def gradients(vals, func, releps=1e-3, abseps=None, mineps=1e-9, reltol=1e-3,\n",
    "              epsscale=0.5):\n",
    "    \"\"\"\n",
    "    Calculate the partial derivatives of a function at a set of values. The\n",
    "    derivatives are calculated using the central difference, using an iterative\n",
    "    method to check that the values converge as step size decreases.\n",
    "\n",
    "    Parameters\n",
    "    ----------\n",
    "    vals: array_like\n",
    "        A set of values, that are passed to a function, at which to calculate\n",
    "        the gradient of that function\n",
    "    func:\n",
    "        A function that takes in an array of values.\n",
    "    releps: float, array_like, 1e-3\n",
    "        The initial relative step size for calculating the derivative.\n",
    "    abseps: float, array_like, None\n",
    "        The initial absolute step size for calculating the derivative.\n",
    "        This overrides `releps` if set.\n",
    "        `releps` is set then that is used.\n",
    "    mineps: float, 1e-9\n",
    "        The minimum relative step size at which to stop iterations if no\n",
    "        convergence is achieved.\n",
    "    epsscale: float, 0.5\n",
    "        The factor by which releps if scaled in each iteration.\n",
    "\n",
    "    Returns\n",
    "    -------\n",
    "    grads: array_like\n",
    "        An array of gradients for each non-fixed value.\n",
    "    \"\"\"\n",
    "\n",
    "    grads = np.zeros(len(vals))\n",
    "\n",
    "    # maximum number of times the gradient can change sign\n",
    "    flipflopmax = 10.\n",
    "\n",
    "    # set steps\n",
    "    if abseps is None:\n",
    "        if isinstance(releps, float):\n",
    "            eps = np.abs(vals)*releps\n",
    "            eps[eps == 0.] = releps  # if any values are zero set eps to releps\n",
    "            teps = releps*np.ones(len(vals))\n",
    "        elif isinstance(releps, (list, np.ndarray)):\n",
    "            if len(releps) != len(vals):\n",
    "                raise ValueError(\"Problem with input relative step sizes\")\n",
    "            eps = np.multiply(np.abs(vals), releps)\n",
    "            eps[eps == 0.] = np.array(releps)[eps == 0.]\n",
    "            teps = releps\n",
    "        else:\n",
    "            raise RuntimeError(\"Relative step sizes are not a recognised type!\")\n",
    "    else:\n",
    "        if isinstance(abseps, float):\n",
    "            eps = abseps*np.ones(len(vals))\n",
    "        elif isinstance(abseps, (list, np.ndarray)):\n",
    "            if len(abseps) != len(vals):\n",
    "                raise ValueError(\"Problem with input absolute step sizes\")\n",
    "            eps = np.array(abseps)\n",
    "        else:\n",
    "            raise RuntimeError(\"Absolute step sizes are not a recognised type!\")\n",
    "        teps = eps\n",
    "\n",
    "    # for each value in vals calculate the gradient\n",
    "    count = 0\n",
    "    for i in range(len(vals)):\n",
    "        # initial parameter diffs\n",
    "        leps = eps[i]\n",
    "        cureps = teps[i]\n",
    "\n",
    "        flipflop = 0\n",
    "\n",
    "        # get central finite difference\n",
    "        fvals = np.copy(vals)\n",
    "        bvals = np.copy(vals)\n",
    "\n",
    "        # central difference\n",
    "        fvals[i] += 0.5*leps  # change forwards distance to half eps\n",
    "        bvals[i] -= 0.5*leps  # change backwards distance to half eps\n",
    "        cdiff = (func(fvals)-func(bvals))/leps\n",
    "\n",
    "        while 1:\n",
    "            fvals[i] -= 0.5*leps  # remove old step\n",
    "            bvals[i] += 0.5*leps\n",
    "\n",
    "            # change the difference by a factor of two\n",
    "            cureps *= epsscale\n",
    "            if cureps < mineps or flipflop > flipflopmax:\n",
    "                # if no convergence set flat derivative (TODO: check if there is a better thing to do instead)\n",
    "                warnings.warn(\"Derivative calculation did not converge: setting flat derivative.\")\n",
    "                grads[count] = 0.\n",
    "                break\n",
    "            leps *= epsscale\n",
    "\n",
    "            # central difference\n",
    "            fvals[i] += 0.5*leps  # change forwards distance to half eps\n",
    "            bvals[i] -= 0.5*leps  # change backwards distance to half eps\n",
    "            cdiffnew = (func(fvals)-func(bvals))/leps\n",
    "\n",
    "            if cdiffnew == cdiff:\n",
    "                grads[count] = cdiff\n",
    "                break\n",
    "\n",
    "            # check whether previous diff and current diff are the same within reltol\n",
    "            rat = (cdiff/cdiffnew)\n",
    "            if np.isfinite(rat) and rat > 0.:\n",
    "                # gradient has not changed sign\n",
    "                if np.abs(1.-rat) < reltol:\n",
    "                    grads[count] = cdiffnew\n",
    "                    break\n",
    "                else:\n",
    "                    cdiff = cdiffnew\n",
    "                    continue\n",
    "            else:\n",
    "                cdiff = cdiffnew\n",
    "                flipflop += 1\n",
    "                continue\n",
    "\n",
    "        count += 1\n",
    "\n",
    "    return grads"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So, now we can just redefine our Op with a `grad()` method, right?\n",
    "\n",
    "It's not quite so simple! The `grad()` method itself requires that its inputs are Theano tensor variables, whereas our `gradients` function above, like our `my_loglike` function, wants a list of floating point values. So, we need to define another Op that calculates the gradients. Below, I define a new version of the `LogLike` Op, called `LogLikeWithGrad` this time, that has a `grad()` method. This is followed by anothor Op called `LogLikeGrad` that, when called with a vector of Theano tensor variables, returns another vector of values that are the gradients (i.e., the [Jacobian](https://en.wikipedia.org/wiki/Jacobian_matrix_and_determinant)) of our log-likelihood function at those values. Note that the `grad()` method itself does not return the gradients directly, but instead returns the [Jacobian](https://en.wikipedia.org/wiki/Jacobian_matrix_and_determinant)-vector product (you can hopefully just copy what I've done and not worry about what this means too much!)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# define a theano Op for our likelihood function\n",
    "class LogLikeWithGrad(tt.Op):\n",
    "\n",
    "    itypes = [tt.dvector] # expects a vector of parameter values when called\n",
    "    otypes = [tt.dscalar] # outputs a single scalar value (the log likelihood)\n",
    "\n",
    "    def __init__(self, loglike, data, x, sigma):\n",
    "        \"\"\"\n",
    "        Initialise with various things that the function requires. Below\n",
    "        are the things that are needed in this particular example.\n",
    "\n",
    "        Parameters\n",
    "        ----------\n",
    "        loglike:\n",
    "            The log-likelihood (or whatever) function we've defined\n",
    "        data:\n",
    "            The \"observed\" data that our log-likelihood function takes in\n",
    "        x:\n",
    "            The dependent variable (aka 'x') that our model requires\n",
    "        sigma:\n",
    "            The noise standard deviation that out function requires.\n",
    "        \"\"\"\n",
    "\n",
    "        # add inputs as class attributes\n",
    "        self.likelihood = loglike\n",
    "        self.data = data\n",
    "        self.x = x\n",
    "        self.sigma = sigma\n",
    "\n",
    "        # initialise the gradient Op (below)\n",
    "        self.logpgrad = LogLikeGrad(self.likelihood, self.data, self.x, self.sigma)\n",
    "\n",
    "    def perform(self, node, inputs, outputs):\n",
    "        # the method that is used when calling the Op\n",
    "        theta, = inputs  # this will contain my variables\n",
    " \n",
    "        # call the log-likelihood function\n",
    "        logl = self.likelihood(theta, self.x, self.data, self.sigma)\n",
    "\n",
    "        outputs[0][0] = np.array(logl) # output the log-likelihood\n",
    "\n",
    "    def grad(self, inputs, g):\n",
    "        # the method that calculates the gradients - it actually returns the\n",
    "        # vector-Jacobian product - g[0] is a vector of parameter values \n",
    "        theta, = inputs  # our parameters \n",
    "        return [g[0]*self.logpgrad(theta)]\n",
    "\n",
    "\n",
    "class LogLikeGrad(tt.Op):\n",
    "\n",
    "    \"\"\"\n",
    "    This Op will be called with a vector of values and also return a vector of\n",
    "    values - the gradients in each dimension.\n",
    "    \"\"\"\n",
    "    itypes = [tt.dvector]\n",
    "    otypes = [tt.dvector]\n",
    "\n",
    "    def __init__(self, loglike, data, x, sigma):\n",
    "        \"\"\"\n",
    "        Initialise with various things that the function requires. Below\n",
    "        are the things that are needed in this particular example.\n",
    "\n",
    "        Parameters\n",
    "        ----------\n",
    "        loglike:\n",
    "            The log-likelihood (or whatever) function we've defined\n",
    "        data:\n",
    "            The \"observed\" data that our log-likelihood function takes in\n",
    "        x:\n",
    "            The dependent variable (aka 'x') that our model requires\n",
    "        sigma:\n",
    "            The noise standard deviation that out function requires.\n",
    "        \"\"\"\n",
    "\n",
    "        # add inputs as class attributes\n",
    "        self.likelihood = loglike\n",
    "        self.data = data\n",
    "        self.x = x\n",
    "        self.sigma = sigma\n",
    "\n",
    "    def perform(self, node, inputs, outputs):\n",
    "        theta, = inputs\n",
    "\n",
    "        # define version of likelihood function to pass to derivative function\n",
    "        def lnlike(values):\n",
    "            return self.likelihood(values, self.x, self.data, self.sigma)\n",
    "\n",
    "        # calculate gradients\n",
    "        grads = gradients(theta, lnlike)\n",
    "\n",
    "        outputs[0][0] = grads"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, let's re-run PyMC3 with our new \"grad\"-ed Op. This time it will be able to automatically use NUTS."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Auto-assigning NUTS sampler...\n",
      "Initializing NUTS using jitter+adapt_diag...\n",
      "Multiprocess sampling (2 chains in 2 jobs)\n",
      "NUTS: [c, m]\n",
      "Sampling 2 chains: 100%|██████████| 8000/8000 [00:08<00:00, 898.88draws/s] \n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create our Op\n",
    "logl = LogLikeWithGrad(my_loglike, data, x, sigma)\n",
    "\n",
    "# use PyMC3 to sampler from log-likelihood\n",
    "with pm.Model() as opmodel:\n",
    "    # uniform priors on m and c\n",
    "    m = pm.Uniform('m', lower=-10., upper=10.)\n",
    "    c = pm.Uniform('c', lower=-10., upper=10.)\n",
    "\n",
    "    # convert m and c to a tensor vector\n",
    "    theta = tt.as_tensor_variable([m, c])\n",
    "\n",
    "    # use a DensityDist\n",
    "    pm.DensityDist('likelihood', lambda v: logl(v), observed={'v': theta})\n",
    "\n",
    "    trace = pm.sample(ndraws, tune=nburn, discard_tuned_samples=True)\n",
    "\n",
    "# plot the traces\n",
    "_ = pm.traceplot(trace, lines={'m': mtrue, 'c': ctrue})\n",
    "\n",
    "# put the chains in an array (for later!)\n",
    "samples_pymc3_2 = np.vstack((trace['m'], trace['c'])).T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, finally, just to check things actually worked as we might expect, let's do the same thing purely using PyMC3 distributions (because in this simple example we can!)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Auto-assigning NUTS sampler...\n",
      "Initializing NUTS using jitter+adapt_diag...\n",
      "Multiprocess sampling (2 chains in 2 jobs)\n",
      "NUTS: [c, m]\n",
      "Sampling 2 chains: 100%|██████████| 8000/8000 [00:03<00:00, 2049.77draws/s]\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x288 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "with pm.Model() as pymodel:\n",
    "    # uniform priors on m and c\n",
    "    m = pm.Uniform('m', lower=-10., upper=10.)\n",
    "    c = pm.Uniform('c', lower=-10., upper=10.)\n",
    "\n",
    "    # convert m and c to a tensor vector\n",
    "    theta = tt.as_tensor_variable([m, c])\n",
    "\n",
    "    # use a Normal distribution\n",
    "    pm.Normal('likelihood', mu=(m*x + c), sd = sigma, observed=data)\n",
    "\n",
    "    trace = pm.sample(ndraws, tune=nburn, discard_tuned_samples=True)\n",
    "\n",
    "# plot the traces\n",
    "_ = pm.traceplot(trace, lines={'m': mtrue, 'c': ctrue})\n",
    "\n",
    "# put the chains in an array (for later!)\n",
    "samples_pymc3_3 = np.vstack((trace['m'], trace['c'])).T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To check that they match let's plot all the examples together and also find the autocorrelation lengths."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Auto-correlation length (Theanp Op (no grad)): 6\n",
      "Auto-correlation length (Theano Op (with grad)): 3\n",
      "Auto-correlation length (Pure PyMC3): 3\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import warnings\n",
    "warnings.simplefilter(action='ignore', category=FutureWarning)  # supress emcee autocorr FutureWarning\n",
    "\n",
    "matplotlib.rcParams['font.size'] = 18\n",
    "\n",
    "hist2dkwargs = {'plot_datapoints': False,\n",
    "                'plot_density': False,\n",
    "                'levels': 1.0 - np.exp(-0.5 * np.arange(1.5, 2.1, 0.5) ** 2)} # roughly 1 and 2 sigma\n",
    "\n",
    "colors = ['r', 'g', 'b']\n",
    "labels = ['Theanp Op (no grad)', 'Theano Op (with grad)', 'Pure PyMC3']\n",
    "\n",
    "for i, samples in enumerate([samples_pymc3, samples_pymc3_2, samples_pymc3_3]):\n",
    "    # get maximum chain autocorrelartion length\n",
    "    autocorrlen = int(np.max(emcee.autocorr.integrated_time(samples, c=3)));\n",
    "    print('Auto-correlation length ({}): {}'.format(labels[i], autocorrlen))\n",
    "\n",
    "    if i == 0:\n",
    "        fig = corner.corner(samples, labels=[r\"$m$\", r\"$c$\"], color=colors[i],\n",
    "                            hist_kwargs={'density': True}, **hist2dkwargs,\n",
    "                            truths=[mtrue, ctrue])\n",
    "    else:\n",
    "        corner.corner(samples, color=colors[i], hist_kwargs={'density': True},\n",
    "                      fig=fig, **hist2dkwargs)\n",
    "\n",
    "fig.set_size_inches(8, 8)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now check that the gradient Op works was we expect it to. First, just create and call the `LogLikeGrad` class, which should return the gradient directly (note that we have to create a [Theano function](http://deeplearning.net/software/theano/library/compile/function.html) to convert the output of the Op to an array). Secondly, we call the gradient from `LogLikeWithGrad` by using the [Theano tensor gradient](http://deeplearning.net/software/theano/library/gradient.html#theano.gradient.grad) function. Finally, we will check the gradient returned by the PyMC3 model for a Normal distribution, which should be the same as the log-likelihood function we defined. In all cases we evaluate the gradients at the true values of the model function (the straight line) that was created."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Gradient returned by \"LogLikeGrad\": [-7.17656625 -1.39486358]\n",
      "Gradient returned by \"LogLikeWithGrad\": [-7.17656625 -1.39486358]\n",
      "Gradient returned by PyMC3 \"Normal\" distribution: [-7.17656625 -1.39486358]\n"
     ]
    }
   ],
   "source": [
    "# test the gradient Op by direct call\n",
    "theano.config.compute_test_value = \"ignore\"\n",
    "theano.config.exception_verbosity = \"high\"\n",
    "\n",
    "var = tt.dvector()\n",
    "test_grad_op = LogLikeGrad(my_loglike, data, x, sigma)\n",
    "test_grad_op_func = theano.function([var], test_grad_op(var))\n",
    "grad_vals = test_grad_op_func([mtrue, ctrue])\n",
    "\n",
    "print('Gradient returned by \"LogLikeGrad\": {}'.format(grad_vals))\n",
    "\n",
    "# test the gradient called through LogLikeWithGrad\n",
    "test_gradded_op = LogLikeWithGrad(my_loglike, data, x, sigma)\n",
    "test_gradded_op_grad = tt.grad(test_gradded_op(var), var)\n",
    "test_gradded_op_grad_func = theano.function([var], test_gradded_op_grad)\n",
    "grad_vals_2 = test_gradded_op_grad_func([mtrue, ctrue])\n",
    "\n",
    "print('Gradient returned by \"LogLikeWithGrad\": {}'.format(grad_vals_2))\n",
    "\n",
    "# test the gradient that PyMC3 uses for the Normal log likelihood\n",
    "test_model = pm.Model()\n",
    "with test_model:\n",
    "    m = pm.Uniform('m', lower=-10., upper=10.)\n",
    "    c = pm.Uniform('c', lower=-10., upper=10.)\n",
    "\n",
    "    pm.Normal('likelihood', mu=(m*x + c), sd=sigma, observed=data)\n",
    "\n",
    "    gradfunc = test_model.logp_dlogp_function([m, c], dtype=None)\n",
    "    gradfunc.set_extra_values({'m_interval__': mtrue, 'c_interval__': ctrue})\n",
    "    grad_vals_pymc3 = gradfunc(np.array([mtrue, ctrue]))[1]  # get dlogp values\n",
    "    \n",
    "print('Gradient returned by PyMC3 \"Normal\" distribution: {}'.format(grad_vals_pymc3))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also do some [profiling](http://docs.pymc.io/notebooks/profiling.html) of the Op, as used within a PyMC3 Model, to check performance. First, we'll profile using the `LogLikeWithGrad` Op, and then doing the same thing purely using PyMC3 distributions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Function profiling\n",
      "==================\n",
      "  Message: /home/matthew/.conda/envs/testing/lib/python3.6/site-packages/pymc3/model.py:909\n",
      "  Time in 1000 calls to Function.__call__: 4.123712e-02s\n",
      "  Time in Function.fn.__call__: 2.523708e-02s (61.200%)\n",
      "  Time in thunks: 2.199244e-02s (53.332%)\n",
      "  Total compile time: 7.463312e-02s\n",
      "    Number of Apply nodes: 8\n",
      "    Theano Optimizer time: 5.898285e-02s\n",
      "       Theano validate time: 5.080700e-04s\n",
      "    Theano Linker time (includes C, CUDA code generation/compiling): 4.571915e-03s\n",
      "       Import time 0.000000e+00s\n",
      "       Node make_thunk time 4.115105e-03s\n",
      "           Node Elemwise{Composite{((i0 + Switch(Cast{int8}((GE(i1, i2) * LE(i1, i3))), i4, i5)) - ((i6 * scalar_softplus((-i7))) + i7))}}[(0, 1)](TensorConstant{2.995732273553991}, c, TensorConstant{-10.0}, TensorConstant{10.0}, TensorConstant{-2.995732273553991}, TensorConstant{-inf}, TensorConstant{2.0}, c_interval__) time 8.506775e-04s\n",
      "           Node Elemwise{Composite{((i0 + Switch(Cast{int8}((GE(i1, i2) * LE(i1, i3))), i4, i5)) - ((i6 * scalar_softplus((-i7))) + i7))}}[(0, 1)](TensorConstant{2.995732273553991}, m, TensorConstant{-10.0}, TensorConstant{10.0}, TensorConstant{-2.995732273553991}, TensorConstant{-inf}, TensorConstant{2.0}, m_interval__) time 8.454323e-04s\n",
      "           Node Elemwise{Composite{(i0 + (i1 * scalar_sigmoid(i2)))}}(TensorConstant{-10.0}, TensorConstant{20.0}, c_interval__) time 6.031990e-04s\n",
      "           Node Elemwise{Composite{(i0 + (i1 * scalar_sigmoid(i2)))}}(TensorConstant{-10.0}, TensorConstant{20.0}, m_interval__) time 5.083084e-04s\n",
      "           Node <__main__.LogLikeWithGrad object at 0x7f1d606e8fd0>(MakeVector{dtype='float64'}.0) time 3.864765e-04s\n",
      "\n",
      "Time in all call to theano.grad() 6.874464e-01s\n",
      "Time since theano import 43.624s\n",
      "Class\n",
      "---\n",
      "<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Class name>\n",
      "  91.8%    91.8%       0.020s       2.02e-05s     Py    1000       1   __main__.LogLikeWithGrad\n",
      "   4.5%    96.3%       0.001s       2.48e-07s     C     4000       4   theano.tensor.elemwise.Elemwise\n",
      "   2.8%    99.1%       0.001s       3.04e-07s     C     2000       2   theano.tensor.opt.MakeVector\n",
      "   0.9%   100.0%       0.000s       2.06e-07s     C     1000       1   theano.tensor.elemwise.Sum\n",
      "   ... (remaining 0 Classes account for   0.00%(0.00s) of the runtime)\n",
      "\n",
      "Ops\n",
      "---\n",
      "<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Op name>\n",
      "  91.8%    91.8%       0.020s       2.02e-05s     Py    1000        1   <__main__.LogLikeWithGrad object at 0x7f1d606e8fd0>\n",
      "   2.8%    94.6%       0.001s       3.04e-07s     C     2000        2   MakeVector{dtype='float64'}\n",
      "   2.5%    97.1%       0.001s       2.79e-07s     C     2000        2   Elemwise{Composite{(i0 + (i1 * scalar_sigmoid(i2)))}}\n",
      "   2.0%    99.1%       0.000s       2.16e-07s     C     2000        2   Elemwise{Composite{((i0 + Switch(Cast{int8}((GE(i1, i2) * LE(i1, i3))), i4, i5)) - ((i6 * scalar_softplus((-i7))) + i7))}}[(0, 1)]\n",
      "   0.9%   100.0%       0.000s       2.06e-07s     C     1000        1   Sum{acc_dtype=float64}\n",
      "   ... (remaining 0 Ops account for   0.00%(0.00s) of the runtime)\n",
      "\n",
      "Apply\n",
      "------\n",
      "<% time> <sum %> <apply time> <time per call> <#call> <id> <Apply name>\n",
      "  91.8%    91.8%       0.020s       2.02e-05s   1000     5   <__main__.LogLikeWithGrad object at 0x7f1d606e8fd0>(MakeVector{dtype='float64'}.0)\n",
      "   2.0%    93.8%       0.000s       4.42e-07s   1000     1   Elemwise{Composite{(i0 + (i1 * scalar_sigmoid(i2)))}}(TensorConstant{-10.0}, TensorConstant{20.0}, m_interval__)\n",
      "   1.7%    95.5%       0.000s       3.73e-07s   1000     6   MakeVector{dtype='float64'}(__logp_m_interval__, __logp_c_interval__, __logp_likelihood)\n",
      "   1.5%    97.0%       0.000s       3.30e-07s   1000     4   Elemwise{Composite{((i0 + Switch(Cast{int8}((GE(i1, i2) * LE(i1, i3))), i4, i5)) - ((i6 * scalar_softplus((-i7))) + i7))}}[(0, 1)](TensorConstant{2.995732273553991}, m, TensorConstant{-10.0}, TensorConstant{10.0}, TensorConstant{-2.995732273553991}, TensorConstant{-inf}, TensorConstant{2.0}, m_interval__)\n",
      "   1.1%    98.1%       0.000s       2.35e-07s   1000     2   MakeVector{dtype='float64'}(m, c)\n",
      "   0.9%    99.0%       0.000s       2.06e-07s   1000     7   Sum{acc_dtype=float64}(MakeVector{dtype='float64'}.0)\n",
      "   0.5%    99.5%       0.000s       1.16e-07s   1000     0   Elemwise{Composite{(i0 + (i1 * scalar_sigmoid(i2)))}}(TensorConstant{-10.0}, TensorConstant{20.0}, c_interval__)\n",
      "   0.5%   100.0%       0.000s       1.03e-07s   1000     3   Elemwise{Composite{((i0 + Switch(Cast{int8}((GE(i1, i2) * LE(i1, i3))), i4, i5)) - ((i6 * scalar_softplus((-i7))) + i7))}}[(0, 1)](TensorConstant{2.995732273553991}, c, TensorConstant{-10.0}, TensorConstant{10.0}, TensorConstant{-2.995732273553991}, TensorConstant{-inf}, TensorConstant{2.0}, c_interval__)\n",
      "   ... (remaining 0 Apply instances account for 0.00%(0.00s) of the runtime)\n",
      "\n",
      "Here are tips to potentially make your code run faster\n",
      "                 (if you think of new ones, suggest them on the mailing list).\n",
      "                 Test them first, as they are not guaranteed to always provide a speedup.\n",
      "  - Try the Theano flag floatX=float32\n",
      "  - Try installing amdlibm and set the Theano flag lib.amdlibm=True. This speeds up only some Elemwise operation.\n"
     ]
    }
   ],
   "source": [
    "# profile logpt using our Op\n",
    "opmodel.profile(opmodel.logpt).summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Function profiling\n",
      "==================\n",
      "  Message: /home/matthew/.conda/envs/testing/lib/python3.6/site-packages/pymc3/model.py:909\n",
      "  Time in 1000 calls to Function.__call__: 1.982212e-02s\n",
      "  Time in Function.fn.__call__: 5.885363e-03s (29.691%)\n",
      "  Time in thunks: 2.546072e-03s (12.845%)\n",
      "  Total compile time: 1.308653e-01s\n",
      "    Number of Apply nodes: 11\n",
      "    Theano Optimizer time: 1.083095e-01s\n",
      "       Theano validate time: 8.940697e-04s\n",
      "    Theano Linker time (includes C, CUDA code generation/compiling): 8.928537e-03s\n",
      "       Import time 1.179457e-03s\n",
      "       Node make_thunk time 8.301497e-03s\n",
      "           Node Elemwise{Composite{(i0 * scalar_sigmoid(i1))}}(TensorConstant{20.0}, c_interval__) time 1.806974e-03s\n",
      "           Node Elemwise{Composite{((i0 + Switch(Cast{int8}((GE((i1 + i2), i1) * LE((i1 + i2), i3))), i4, i5)) - ((i6 * scalar_softplus((-i7))) + i7))}}[(0, 2)](TensorConstant{2.995732273553991}, TensorConstant{-10.0}, Elemwise{Composite{(i0 * scalar_sigmoid(i1))}}.0, TensorConstant{10.0}, TensorConstant{-2.995732273553991}, TensorConstant{-inf}, TensorConstant{2.0}, c_interval__) time 1.499176e-03s\n",
      "           Node InplaceDimShuffle{x}(Elemwise{Composite{(i0 * scalar_sigmoid(i1))}}.0) time 8.523464e-04s\n",
      "           Node Elemwise{Composite{((i0 + Switch(Cast{int8}((GE(i1, i2) * LE(i1, i3))), i4, i5)) - ((i6 * scalar_softplus((-i7))) + i7))}}[(0, 1)](TensorConstant{2.995732273553991}, m, TensorConstant{-10.0}, TensorConstant{10.0}, TensorConstant{-2.995732273553991}, TensorConstant{-inf}, TensorConstant{2.0}, m_interval__) time 7.934570e-04s\n",
      "           Node InplaceDimShuffle{x}(m) time 7.789135e-04s\n",
      "\n",
      "Time in all call to theano.grad() 6.874464e-01s\n",
      "Time since theano import 43.954s\n",
      "Class\n",
      "---\n",
      "<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Class name>\n",
      "  53.3%    53.3%       0.001s       2.26e-07s     C     6000       6   theano.tensor.elemwise.Elemwise\n",
      "  22.9%    76.2%       0.001s       2.91e-07s     C     2000       2   theano.tensor.elemwise.DimShuffle\n",
      "  14.1%    90.3%       0.000s       3.58e-07s     C     1000       1   theano.tensor.opt.MakeVector\n",
      "   9.7%   100.0%       0.000s       1.23e-07s     C     2000       2   theano.tensor.elemwise.Sum\n",
      "   ... (remaining 0 Classes account for   0.00%(0.00s) of the runtime)\n",
      "\n",
      "Ops\n",
      "---\n",
      "<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Op name>\n",
      "  22.9%    22.9%       0.001s       2.91e-07s     C     2000        2   InplaceDimShuffle{x}\n",
      "  14.1%    37.0%       0.000s       3.58e-07s     C     1000        1   MakeVector{dtype='float64'}\n",
      "  11.5%    48.5%       0.000s       2.93e-07s     C     1000        1   Elemwise{Composite{(i0 + (-sqr((i1 - ((i2 * i3) + i4)))))}}\n",
      "  11.3%    59.8%       0.000s       2.88e-07s     C     1000        1   Elemwise{Composite{(i0 + (i1 * scalar_sigmoid(i2)))}}\n",
      "  10.8%    70.6%       0.000s       2.75e-07s     C     1000        1   Elemwise{Composite{((i0 + Switch(Cast{int8}((GE((i1 + i2), i1) * LE((i1 + i2), i3))), i4, i5)) - ((i6 * scalar_softplus((-i7))) + i7))}}[(0, 2)]\n",
      "   9.7%    80.3%       0.000s       2.47e-07s     C     1000        1   Elemwise{Composite{((i0 + Switch(Cast{int8}((GE(i1, i2) * LE(i1, i3))), i4, i5)) - ((i6 * scalar_softplus((-i7))) + i7))}}[(0, 1)]\n",
      "   9.7%    90.0%       0.000s       1.23e-07s     C     2000        2   Sum{acc_dtype=float64}\n",
      "   6.0%    96.0%       0.000s       1.52e-07s     C     1000        1   Elemwise{Composite{(i0 * scalar_sigmoid(i1))}}\n",
      "   4.0%   100.0%       0.000s       1.03e-07s     C     1000        1   Elemwise{Mul}[(0, 1)]\n",
      "   ... (remaining 0 Ops account for   0.00%(0.00s) of the runtime)\n",
      "\n",
      "Apply\n",
      "------\n",
      "<% time> <sum %> <apply time> <time per call> <#call> <id> <Apply name>\n",
      "  14.1%    14.1%       0.000s       3.58e-07s   1000     9   MakeVector{dtype='float64'}(__logp_m_interval__, __logp_c_interval__, __logp_likelihood)\n",
      "  13.5%    27.5%       0.000s       3.43e-07s   1000     3   InplaceDimShuffle{x}(m)\n",
      "  11.5%    39.0%       0.000s       2.93e-07s   1000     4   Elemwise{Composite{(i0 + (-sqr((i1 - ((i2 * i3) + i4)))))}}(TensorConstant{(1,) of -1..0664093453}, TensorConstant{[13.059668...46571405]}, InplaceDimShuffle{x}.0, TensorConstant{[0. 1. 2. .. 7. 8. 9.]}, InplaceDimShuffle{x}.0)\n",
      "  11.3%    50.4%       0.000s       2.88e-07s   1000     1   Elemwise{Composite{(i0 + (i1 * scalar_sigmoid(i2)))}}(TensorConstant{-10.0}, TensorConstant{20.0}, m_interval__)\n",
      "  10.8%    61.2%       0.000s       2.75e-07s   1000     5   Elemwise{Composite{((i0 + Switch(Cast{int8}((GE((i1 + i2), i1) * LE((i1 + i2), i3))), i4, i5)) - ((i6 * scalar_softplus((-i7))) + i7))}}[(0, 2)](TensorConstant{2.995732273553991}, TensorConstant{-10.0}, Elemwise{Composite{(i0 * scalar_sigmoid(i1))}}.0, TensorConstant{10.0}, TensorConstant{-2.995732273553991}, TensorConstant{-inf}, TensorConstant{2.0}, c_interval__)\n",
      "   9.7%    70.9%       0.000s       2.47e-07s   1000     6   Elemwise{Composite{((i0 + Switch(Cast{int8}((GE(i1, i2) * LE(i1, i3))), i4, i5)) - ((i6 * scalar_softplus((-i7))) + i7))}}[(0, 1)](TensorConstant{2.995732273553991}, m, TensorConstant{-10.0}, TensorConstant{10.0}, TensorConstant{-2.995732273553991}, TensorConstant{-inf}, TensorConstant{2.0}, m_interval__)\n",
      "   9.4%    80.3%       0.000s       2.40e-07s   1000     2   InplaceDimShuffle{x}(Elemwise{Composite{(i0 * scalar_sigmoid(i1))}}.0)\n",
      "   6.0%    86.3%       0.000s       1.52e-07s   1000     0   Elemwise{Composite{(i0 * scalar_sigmoid(i1))}}(TensorConstant{20.0}, c_interval__)\n",
      "   5.2%    91.4%       0.000s       1.31e-07s   1000    10   Sum{acc_dtype=float64}(MakeVector{dtype='float64'}.0)\n",
      "   4.5%    96.0%       0.000s       1.15e-07s   1000     7   Sum{acc_dtype=float64}(Elemwise{Composite{(i0 + (-sqr((i1 - ((i2 * i3) + i4)))))}}.0)\n",
      "   4.0%   100.0%       0.000s       1.03e-07s   1000     8   Elemwise{Mul}[(0, 1)](TensorConstant{0.5}, Sum{acc_dtype=float64}.0)\n",
      "   ... (remaining 0 Apply instances account for 0.00%(0.00s) of the runtime)\n",
      "\n",
      "Here are tips to potentially make your code run faster\n",
      "                 (if you think of new ones, suggest them on the mailing list).\n",
      "                 Test them first, as they are not guaranteed to always provide a speedup.\n",
      "  - Try the Theano flag floatX=float32\n",
      "  - Try installing amdlibm and set the Theano flag lib.amdlibm=True. This speeds up only some Elemwise operation.\n"
     ]
    }
   ],
   "source": [
    "# profile using our PyMC3 distribution\n",
    "pymodel.profile(pymodel.logpt).summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Authors\n",
    "\n",
    "* Adapted from a blog post by [Matt Pitkin](http://mattpitkin.github.io/samplers-demo/pages/pymc3-blackbox-likelihood/) on August 27, 2018. That post was based on an example provided by [Jørgen Midtbø](https://github.com/jorgenem/)."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
